************************************************************************
* id: 521
* requirement: Python: support multiple import source directories with the same qualified name
*=======================================================================
* no changes, only the initial requirement, implements, and discussion.
*=======================================================================
************************************************************************
* type: implements
*-----------------------------------------------------------------------
* time: 2017-02-27T21:22:20Z
* content: Python import resolution: support multiple import source directories â€¦
* codeUrl: github.com/JetBrains/intellij-community/pull/521/commits/ac321facaaf15b3b1b40ae2fe1ebd2fca16fd766
************************************************************************
************************************************************************
* type: discussion
*-----------------------------------------------------------------------
* time: 2017-02-27T21:43:11Z
* content: This was supported prior to f0d6fdce.
* time: 2017-02-27T21:43:11Z
* content: To support the Bazel build system, we rely on being able to provide multiple import source candidates for a given directory.
* time: 2017-02-27T21:43:11Z
* content: This is required for from package import symbol statements, where PyResolveImportUtil::resolveQualifiedName is called with only the from package context, and doesn't resolve to a unique candidate directory.
* time: 2017-03-01T16:47:05Z
* content: Hi there! I've added some tests to demonstrate these changes, along with a regression test for PyCustomPackageIdentifer.
* time: 2017-03-07T23:56:44Z
* content: Returning only first results for non-namespace packages was intentional. This was a fix for problems like PY-18626 where at run-time you actually imported only the first module found on sys.path whereas statically PyCharm suggested all the modules.
* time: 2017-03-07T23:56:44Z
* content: I agree that this change has introduced a regression since at least for foreign imports you could rely on the fact that all the results were returned. Foreign imports represent custom resolve rules so they should allow to override this resolve-to-first policy of the standard Python import mechanism.
* time: 2017-03-07T23:56:44Z
* content: The fix you're suggesting would break PY-18626 and PY-9011.
* time: 2017-03-07T23:56:44Z
* content: What do you think of applying the resolve-to-first policy only to native Python import results and skip it for foreign results? Would it work for your case?
* time: 2017-03-07T23:56:44Z
* content: If you're OK with this idea, would you mind updating your PR according to it? I'd like to fix this problem in one way or another before releasing PyCharm 2017.1.
* time: 2017-03-08T00:07:44Z
* content: The YouTrack issue for this PR is PY-22522.
* time: 2017-03-08T00:38:10Z
* content: Thanks, that sounds good. I've updated the PR with your proposed change.
************************************************************************
