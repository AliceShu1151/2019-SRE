541,[Fernflower] Fixed: Use fully qualified static field name in conflict
2017-04-07T05:55:51Z,discuss,Put 'pkg' in expressions pkg.a.v and pkg.a.f() to refer static members of the class pkg.a when the name 'a' is already used in current class
2017-04-07T05:55:51Z,discuss,See the test case pkg/TestClashName for details.
2017-04-19T17:38:42Z,discuss,"I would prefer to have everything inside the ImportCollector. It is created for a single class and the list of all fields names (probably only visible) could be calculated once at that moment, this way the check inside the containsFieldWithShortName would be much faster.
Also it would enable the fix for all getShortName invocations."
2017-04-19T18:06:18Z,discuss,"Making all the changes inside the getShortName() was my first attempt to fix the issue. It was found that all other places where the getShortName is invoked do not introduce the observed naming conflict. Without the conflict, the short name can be safely kept at that places. I am preparing a test case to illustrate the statement."
2017-04-20T08:20:18Z,discuss,"Ok then please fix fields calculation on every request, also in my opinion the code still belongs to the the ImportCollector. Maybe you could introduce getShortNameInClass or something there."
2017-04-20T13:40:44Z,discuss,"Extended test case. As promised, I have extended TestClashName test case to cover all relevant usages of getShortName() method in the  d05e292. Comments in the test case illustrate whether local variable or method may or may not shadow class name in each particular use case. Checking for class name shadowing by local variable/method appears to be required only in FieldExprent, and InvocationExprent use cases. Only these cases use checking for shadowing in the suggested PR. I do not believe that the checking has to be applied to all other use cases, which may happen if the checking logic is unconditionally moved inside the ImportCollector.getShortName()."
2017-04-20T13:40:44Z,discuss,"Suggested refactoring. New StructClass.containsFieldWithShortName() is a recursive method in a context of current class. The method traverses up through a class hierarchy when looking for conflicting variable/method name. The method manipulates mainly with locals of the StructClass, namely variables ""fields"", and ""superClass"". Moving the method outside of the StructClass context may introduce unclear recursion calls, and direct manipulations on the StructClass variables by a code outside of the StructClass."
2017-04-20T13:40:44Z,discuss,"Please, revisit your change request considering the above details. I am waiting for your response."
2017-04-21T17:04:20Z,discuss,I believe that the today's commits 10b80dd and b3f2e66 should address the change request.
2017-04-24T11:18:25Z,discuss,"Merged into one commit and pushed into master, thanks!"
2017-04-07T05:28:17Z,commit,[Fernflower] Fixed: Use fully qualified static field name in conflict,github.com/JetBrains/intellij-community/pull/541/commits/dacc7c8f1b4b2cb8250bc90888784672920afe47
2017-04-07T09:40:09Z,commit,[Fernflower] Fixed: Use fully qualified static field name in conflict,github.com/JetBrains/intellij-community/pull/541/commits/372aa9ac45a938190ed3c339daa6049d33d272e2
2017-04-07T11:29:05Z,commit,[Fernflower] Fixed: Use fully qualified static field name in conflict,github.com/JetBrains/intellij-community/pull/541/commits/b01179128fc706adffcee34e434e793fc9b3bae2
2017-04-19T15:22:52Z,commit,Fixed NPE in StructClass.containsFieldWithShortName(). See the test c¡­,github.com/JetBrains/intellij-community/pull/541/commits/bcc6a3b9e00ff741ac1d9e65d47c8f8350ea6830
2017-04-20T12:37:56Z,commit,Extended TestClashName test case to cover all relevant usages of getS¡­,github.com/JetBrains/intellij-community/pull/541/commits/d05e292045d37767b1e95060ee13bdc2e9e92c51
2017-04-21T16:31:11Z,commit,"Refactor: per code reviewer request, moved all created logic into Imp¡­",github.com/JetBrains/intellij-community/pull/541/commits/10b80ddd441fc093684605e78dd23d3972b61444
2017-04-21T17:00:19Z,commit,"Refactor: Performance. Per code reviewer suggestion, moved pre-calcul¡­",github.com/JetBrains/intellij-community/pull/541/commits/b3f2e667104f8025529e63a036464ae76e601429
2017-04-21T18:35:43Z,commit,Refactor: javadoc comments,github.com/JetBrains/intellij-community/pull/541/commits/33d7578a6cc0f71dc4392d09d1c78f212b9b5a03
