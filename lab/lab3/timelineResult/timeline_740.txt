************************************************************************
* id: 740
* requirement: JPS: add extension to provide additional constant affection resolvers
*=======================================================================
* no changes, only the initial requirement, implements, and discussion.
*=======================================================================
************************************************************************
* type: implements
*-----------------------------------------------------------------------
* time: 2018-02-20T21:34:50Z
* content: JPS: add extension to provide additional constant affection resolvers
* codeUrl: github.com/JetBrains/intellij-community/pull/740/commits/38a8a80514cd7cedb869960b208f7c899d4088f8
************************************************************************
************************************************************************
* type: discussion
*-----------------------------------------------------------------------
* time: 2018-02-20T21:57:37Z
* content: JVM languages such as Kotlin can inline constant values at use-site. When a constant's value is changed, all use-sites must be recompiled. Since values are inlined, there are no references in bytecode so Java builder does not know when a Java constant is referenced in Kotlin. Kotlin builder knows where each FQ-name is used, but does not know when a Java constant is changed.
* time: 2018-02-20T21:57:37Z
* content: To fix KT-16091, Kotlin plugin needs to provide additional ConstantAffectionResolver, so it would be notified when a constant value is changed.
* time: 2018-02-20T21:57:37Z
* content: In this commit ConstantSearchProvider class is added. Additional instances of ConstantAffectionResolver provided by ConstantSearchProvider implementations are used only when "main" ConstantAffectionResolver (that searches using Intellij) is used (otherwise Java builder forces rebuild, so it does not make sense).
* time: 2018-02-20T21:57:37Z
* content: // cc @chashnikov
* time: 2018-02-21T10:40:42Z
* content: I have replaced it with the composite implementation of Callbacks.ConstantAffectionResolver which is used as a ConstantSearch service, if there are some custom extensions. So so code in Mappings remains the same
************************************************************************
