316,Use commit template if available
2015-10-26T23:47:47Z,discuss,Added a configuration option to use a VCS commit template if its available. This fixes https://youtrack.jetbrains.com/issue/IDEA-66355 for Git
2015-10-26T23:47:47Z,discuss,Testing: Local Git repo shows the commit template
2015-10-27T13:15:37Z,discuss,"Have you submitted a contributor license agreement? If not, please download the PDF from http://www.jetbrains.org/display/IJOS/Contributor+Agreement and then print it out, sign (mention you github account name there), scan and email to contribute@jetbrains.com"
2015-10-27T15:59:27Z,discuss,Sent the signed agreement to contribute@jetbrains.com
2015-10-29T16:21:04Z,discuss,"Received, thanks."
2015-10-31T16:16:51Z,discuss,"First of all, thank you for the contribution."
2015-10-31T16:16:51Z,discuss,"There is a problem with this pull request though. You're requesting commit templates when constructing the commit dialog, i.e. on the EDT. But such methods as GitConfigUtil.getValue, which forks a git process, and FileUtil.loadFile, which reads from disk (less painful but still not perfect), can potentially take long time to finish. And they will freeze the UI during that time. On modern machines with SSD no user will even notice that, but we have to consider older machines, heavily-loaded system, HDD and even network drives."
2015-10-31T16:16:51Z,discuss,"A simple solution could be to perform these actions under a modal progress (which in IntelliJ IDEA doesn't appear if the action takes less than 0.3s), but then there is a risk of blinking modal progresses on slow machines. That would annoy users a lot, especially if they don't use any commit template."
2015-10-31T16:16:51Z,discuss,"One more idea which comes to my mind is to cache the commit message template in a way similar as we already do for the list of branches (see GitRepositoryImpl.getBranches()): listen to git config and template file changes, load the file in the background when such change happens, use the cached value instantly when commit dialog is shown. However, this needs to be thinked over carefully."
2015-10-31T16:16:51Z,discuss,Your suggestions are welcome.
2015-11-03T05:31:54Z,discuss,"Thanks! I had not thought of these conditions. The caching solution seems ok. However, the file doesn't have to change for the template to change. User can update the git global option to point to a different file. Users will have to restart IntelliJ IDEA at that point to pick up the new template."
2015-11-03T12:42:44Z,discuss,"Actually, we can capture even this fact as well. I've issued a request about tracking global git config changes some time ago. However, this can be implemented within a separate activity."
2015-11-03T12:42:44Z,discuss,Do you want to try the caching approach yourself or you'd better wait for a fix from my side?
2015-11-03T12:42:44Z,discuss,"At any case, let me note another issue in this pull request - an incompatible API change: unfortunately CheckingEnvironment is not an abstract class but an interface which makes method additions destructive for all implementors (which as I see we have quite a bit among existing 3party plugins)."
2015-11-03T12:42:44Z,discuss,"A valid solution could be to add an extension point which would provide the commit template (e.g. like com.intellij.dvcs.push.PushSupport or com.intellij.dvcs.cherrypick.VcsCherryPicker). Of course, the extension point should probably indicate which VCS does it support, and there should still be some policy on what to do if there are several extension point implementations for the same VCS (e.g. ignore this situation and simply pick up the first random extension point (I prefer this one, because the situation seems to be quite unlikely)? or maybe show a dialog proposing to choose the template?)."
2015-11-12T06:36:28Z,discuss,"You are right. Modifying the interface is probably a bad idea for other plugins. I can add an extension point and get the (cached) commit template from the extension in the CommitChangeListDialog class, same place where I call the interface method currently. Would that work?"
2015-11-13T13:07:24Z,discuss,"Not exactly. There is some complex logic around choosing initial commit message. In particular, a valuable feature is preserving commit message on cancel (user decides to commit, edits the message, cancels the dialog to make some additional changes, and calls the commit dialog again). See setComment() method of CommitChangeListDialog. Unfortunately, the whole logic is not entirely clear there due other aspects (such as taking commit message from the changelist, etc.), and we need to decide when commit message should be substituted and with which value."
2015-11-13T13:07:24Z,discuss,"There is also a property VcsConfiguration.getInstance(getProject()).CLEAR_INITIAL_COMMIT_MESSAGE which corresponds to a user preference (IDEA Settings | Version Control | Confirmation | Clear initial commit message). Currently it works incorrectly, because it clears the commit message even after commit dialog is cancelled, but - apart of this bug - it looks like this is the right place to insert loading commit message from the VCS template (with fixing that bug of course). I even think that we may use the same UI property, just rename it (i.e. ""clear or take from the VCS template if one exists"")."
2015-11-13T13:07:24Z,discuss,"That said, let me take a pause to check the logic of commit message default values, I would also welcome if you investigate this matter as well. Note that there are already many other issues with this logic which you may find amongst the 'related issues' list of IDEA-66355."
2017-04-13T11:26:24Z,discuss,+1
2017-05-11T06:24:09Z,discuss,Any progress?
2018-04-06T22:42:17Z,discuss,+1
2018-08-10T16:59:26Z,discuss,+1
2018-09-26T16:13:46Z,discuss,"One more point here. There could be commented lines (lines starting with #) in the commit message template, which will be removed from commit message if using git executable. But currently if such commented lines are present in the ""Commit message"" field of the commit dialog they are not removed and just become part of the commit message."
2018-09-26T16:13:46Z,discuss,"So we need to deal with this somehow. Probably not load commit template to the ""Commit message"" field, but just show it somewhere to be used as a reference. Or add logic to highlight such lines in ""Commit message"" field and remove them on commit. Etc."
2018-09-26T16:13:46Z,discuss,What do you think?
2018-09-26T16:24:00Z,discuss,"Not loading the template into the message field would completely miss the point of having it. Lines starting with #, if present in the template, would need to be loaded into the message field and then ignored. Same behaviour as if commiting through git using any text editor."
2018-09-27T08:55:32Z,discuss,"That's what we can't do. The user interface in the IDE is not the same as a text editor invoked from the command line. Users as used to the fact that everything they enter into the commit message field becomes the commit message. They would be very surprised if quite common text constructions like ""Fixed #23"" become ignored and stripped out from the commit message."
2018-09-27T13:17:20Z,discuss,"Please, don't be so naive. ""fixed #23"" would never be left out of the commit message, not even in plain git. Only lines starting with #. Users are used to use git, and that is the default behaviour."
2018-09-27T13:35:31Z,discuss,"Possibly, such comment lines could be rendered differently to clearly indicate that they are comments. They should be uneditable (not sure if it is possible to make an uneditable fragment in the editable editor), and new lines starting with ""#"" should not be treated as comments. That could work. @pchel- what do you think of it?"
2018-09-27T16:27:58Z,discuss,Probably we could try rendering such template comments using InlayModel in the commit message editor. Or utilize Document.createGuardedBlock(). Need to create prototype to test it.
2019-02-04T20:26:53Z,discuss,Hi guys! Does anyone working on this right now ? I would like to continue the work on this if it's not taken.
2019-02-05T19:52:19Z,discuss,Hi! It won't be part of the upcoming 2019.1 release. But we plan to add commit message template support this year (2019.2 or 2019.3).
2019-02-05T20:05:20Z,discuss,Cool! In this case I'm gonna play around with it :)
2019-02-06T00:59:10Z,discuss,Does this has a YouTrack issue we can follow? I would like to also request support for Pull Request message template.
2019-02-06T08:58:12Z,discuss,This one https://youtrack.jetbrains.com/issue/IDEA-66355
2019-06-23T00:32:35Z,discuss,@Pozo are you working on this? what's your estimate?
2015-10-23T23:29:04Z,commit,Use commit template if available,github.com/JetBrains/intellij-community/pull/316/commits/a61ee6a7445f4ed8d5c53b2ee56eacadf28bb8ba
