368,[Fernflower] Refactored IIdentifierRenamer to be more flexible.
2016-03-10T22:26:59Z,discuss,"I went ahead and refactored the IIdentifierRenamer class and added some basic documentation to it. I also separated the default implementation of it into a separate class called DefaultIIdentifierRenamer and left the ConverterHelper class in place to store static methods that are useful and related to the renaming process. Classes with names differing only in case are also now renamed by default since you can't properly extract them on windows without them overwriting each other. In addition, I made it so that getNextClassName has a new argument of int accessFlags which I used to change the default class prefix from ""class_"" to ""interface_"", ""enum_"", and ""annotation_"" if appropriate. By doing that it's now easier to find what you're looking for at a glance."
2016-03-10T22:34:07Z,discuss,"Hi,
Thank you for your pull requests!
What about new tests and testing your changes?"
2016-03-10T22:38:50Z,discuss,"I tested it in a variety of situations on several large projects to verify it works correctly, however I'm not familiar with how you guys do unit testing because of the nature of the project."
2016-03-10T22:38:50Z,discuss,I forgot to mention it before but I've signed the CLA previously and had several similar pull requests accepted. The difficulties that I see with unit testing something like this is that it has to do with renaming and the default renamer has rather defined guidelines that would make unit testing difficult.
2016-03-10T22:42:20Z,discuss,I've been working on fixing the renaming system which has long been broken and once the two pull requests that I've submitted today are accepted there is only one more major bug in the renaming system that I'm aware of and likely a few smaller bugs that I won't be able to identify until these changes are pushed (including the fix for the remaining bug that is well documented on the issue tracker).
2016-03-10T22:42:20Z,discuss,"I'm not just testing these changes on small test suites, I'm running them over large scale applications."
2016-03-12T14:45:17Z,discuss,"Tests are needed to avoid regressions in the future, e.g. with changes from other persons"
2016-03-14T01:31:21Z,discuss,@nicity Is there any documentation on how Fernflowers test system works? I know it doesn't function with standard unit tests. I'll attempt to write some tests for it but due to the nature of renaming and the fact that custom implementations of IIdentifierRenamer can be provided I'm thinking it'll be rather difficult to make reliable tests.
2016-03-14T21:45:46Z,discuss,I'm going to close this pull request because I accidentally deleted the branch it was being pulled from and because of that I can't easily add on to this. I'll make a new pull request once I've made some additional tweaks and came up with some reliable tests.
2016-03-15T16:05:58Z,discuss,"@ccarpenter04 pretty standard JUnit tests (not many of them, unfortunately). See plugins/java-decompiler/engine/build.xml and plugins/java-decompiler/engine/test/* for the reference."
2016-03-15T21:55:21Z,discuss,"@trespasserw Oh okay, now I understand how you guys are handling them. The .dec files confused me until I realized how you guys were generating them to begin with. I'll try to have the unit tests written for this sometime this week."
2016-03-10T21:16:51Z,commit,Refactored and documented IIdentifierRenamer. This IIdentifierRenamer¡­,github.com/JetBrains/intellij-community/pull/368/commits/eaf5d85f805bea2d3f9ceecf424daeb8c64c6b95
2016-03-10T21:44:57Z,commit,Provide the class's access flag when generating a new name so that we¡­,github.com/JetBrains/intellij-community/pull/368/commits/5c804c370e71a74de32f8e93c6afde3fddf25d3d
2016-03-10T21:50:41Z,commit,Added support for detecting annotations during name generation and us¡­,github.com/JetBrains/intellij-community/pull/368/commits/d6155eb3638a4b26eb61db603225e78703160104
2016-03-14T02:08:30Z,commit,Update readme.txt to provide accurate information on the current defa¡­,github.com/JetBrains/intellij-community/pull/368/commits/64f49e537fce38d1ee0af3af71efa6568e02cb17
