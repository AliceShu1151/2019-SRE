728,PY-20075/PY-28393/PY-28332: Correctly resolve PyModuleType
2018-02-08T07:41:55Z,discuss,"
No description provided.
"
2018-02-08T14:23:46Z,discuss,Thanks for your pull request! Could you please address some issues found during the review?
2018-02-08T15:47:42Z,discuss,Thanks for the comments. I will make the requested changes.
2018-02-09T04:48:52Z,discuss,"@vlasovskikh @sproshev
I've implemented most of the changes and fixed a couple more issues. What's outstanding is:"
2018-02-09T04:48:52Z,discuss,"Figuring out how to create a high level test for the equals and hashCode change. I've made that change not to fix a specific behavior but ""§Ú§Ù §à§Ò§ë§Ú§ç §ã§à§à§Ò§â§Ñ§Ø§Ö§ß§Ú§Û"""
2018-02-09T04:48:52Z,discuss,Removing usages of deprecated methods. It is not always obvious what to do in every case. So this may take a while
2018-02-09T04:48:52Z,discuss,collectImportedSubmodules and resolveImplicitPackageMember are now very similar. So that may be worth refactoring...
2018-02-09T11:42:11Z,discuss,I've come up with a test for equality:
2018-02-09T11:42:11Z,discuss,a.py:
2018-02-09T11:42:11Z,discuss,"We have a union in the text message even though it's the same imported module. To fix this you'll have to introduce equals and hashCode for PyImportedModuleType as well. See PyUnionType.myMembers, com.jetbrains.python.inspections.Py3UnresolvedReferencesInspectionTest#doMultiFileTest(java.lang.String, java.util.List<java.lang.String>)."
2018-02-09T11:43:19Z,discuss,@fitermay Could you please fix the issue with equals and hashCode and optionally address some code style comments? I'll be happy to accept this PR after the fix.
2018-02-09T13:01:47Z,discuss,@vlasovskikh @sproshev Thanks for the review. I've applied the changes
2018-02-09T15:55:56Z,discuss,@fitermay I'm afraid one of the tests has become red after the recent changes in code completion: com.jetbrains.python.PythonCompletionTest#testSubmoduleOfIndirectlyImportedPackage. Could you please take a look?
2018-02-09T18:33:21Z,discuss,@fitermay It failed for me several times in a row. I have to tell that I was running it with other tests when it failed.
2018-02-09T19:52:04Z,discuss,@vlasovskikh
2018-02-09T19:52:04Z,discuss,You can comment out tests testExcludedSubPackage() and testExcludedTopLevelPackage() and the test will pass.  Apparently PsiTestUtil.addExcludedRoot(...) stays even after the test is finished and that keeps pkg1 in excluded roots!
2018-02-10T04:14:50Z,discuss,@vlasovskikh I've fixed the tear down issue in PythonCompletionTest as well as make a few more minor changes
2018-02-12T10:38:36Z,discuss,@fitermay Thanks for your fixes! I've rebased your PR onto master.
2017-11-17T03:45:01Z,commit,PY-20075/PY-28393/PY-28332: Correctly resolve PyModuleType,github.com/JetBrains/intellij-community/pull/728/commits/da5ca79267f90ce990229ddfba7fe4a4c23dd823
2017-11-17T03:45:01Z,commit,PY-28393: fix import statement dot completion in import nspackage.<>,github.com/JetBrains/intellij-community/pull/728/commits/6100319eb9ccc6b99cfbe044a8c910423be2c36e
2017-11-17T03:45:01Z,commit,PY-28332: Fix completions for indirectly imported packages via 'from',github.com/JetBrains/intellij-community/pull/728/commits/874d4df5ea4ade67a829299a5f937ef20b71bd8a
2018-02-09T12:25:13Z,commit,fixes after review: ensure gainful employment for ContainerUtil,github.com/JetBrains/intellij-community/pull/728/commits/036f746502c66a73fcb975e8f3b4bfccc8b7521a
2018-02-09T12:40:34Z,commit,introduce equals and hashCode for PyImportedModuleType,github.com/JetBrains/intellij-community/pull/728/commits/e4b58a2b9f8a82eb21f351202ab0d0139d548c0f
2018-02-09T12:44:38Z,commit,added TODO,github.com/JetBrains/intellij-community/pull/728/commits/f13e2cb0ab3f821ae558dcf5b7b28999f46229bf
2018-02-10T03:10:42Z,commit,fix `addExcludedRoot` not torn down in PythonCompletionTest,github.com/JetBrains/intellij-community/pull/728/commits/2c9814dcd233b3ca7c1c19bb011de0c8a12ea0e3
2018-02-10T03:14:34Z,commit,use `location` as QualifiedNameFinder foothold,github.com/JetBrains/intellij-community/pull/728/commits/08cd2cd4c896fb123ab25a0ab495dc8e8053f76b
2018-02-10T03:20:58Z,commit,QualifiedNameFinder.findImportableQNames should not return duplicates,github.com/JetBrains/intellij-community/pull/728/commits/1eb30120ff9dbbe01c040fc4c1ce0edfbc4351ec
2018-02-10T04:12:49Z,commit,fix terminology: anchor->footHold,github.com/JetBrains/intellij-community/pull/728/commits/8dc4e446ee07a05311f370c8b0ebd8f436569246
